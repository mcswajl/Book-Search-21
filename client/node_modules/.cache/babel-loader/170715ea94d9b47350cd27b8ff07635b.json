{"ast":null,"code":"import { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * Unique fragment names\r\n *\r\n * A GraphQL document is only valid if all defined fragments have unique names.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\r\n */\n\nexport function UniqueFragmentNamesRule(context) {\n  const knownFragmentNames = Object.create(null);\n  return {\n    OperationDefinition: () => false,\n\n    FragmentDefinition(node) {\n      const fragmentName = node.name.value;\n\n      if (knownFragmentNames[fragmentName]) {\n        context.reportError(new GraphQLError(`There can be only one fragment named \"${fragmentName}\".`, [knownFragmentNames[fragmentName], node.name]));\n      } else {\n        knownFragmentNames[fragmentName] = node.name;\n      }\n\n      return false;\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/BootCamp/Book-Search-21/node_modules/graphql/validation/rules/UniqueFragmentNamesRule.mjs"],"names":["GraphQLError","UniqueFragmentNamesRule","context","knownFragmentNames","Object","create","OperationDefinition","FragmentDefinition","node","fragmentName","name","value","reportError"],"mappings":"AAAA,SAASA,YAAT,QAA6B,8BAA7B;AAEA;;;;;;;;AAOA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AAC/C,QAAMC,kBAAkB,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAA3B;AACA,SAAO;AACLC,IAAAA,mBAAmB,EAAE,MAAM,KADtB;;AAGLC,IAAAA,kBAAkB,CAACC,IAAD,EAAO;AACvB,YAAMC,YAAY,GAAGD,IAAI,CAACE,IAAL,CAAUC,KAA/B;;AAEA,UAAIR,kBAAkB,CAACM,YAAD,CAAtB,EAAsC;AACpCP,QAAAA,OAAO,CAACU,WAAR,CACE,IAAIZ,YAAJ,CACG,yCAAwCS,YAAa,IADxD,EAEE,CAACN,kBAAkB,CAACM,YAAD,CAAnB,EAAmCD,IAAI,CAACE,IAAxC,CAFF,CADF;AAMD,OAPD,MAOO;AACLP,QAAAA,kBAAkB,CAACM,YAAD,CAAlB,GAAmCD,IAAI,CAACE,IAAxC;AACD;;AAED,aAAO,KAAP;AACD;;AAlBI,GAAP;AAoBD","sourcesContent":["import { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * Unique fragment names\r\n *\r\n * A GraphQL document is only valid if all defined fragments have unique names.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness\r\n */\r\nexport function UniqueFragmentNamesRule(context) {\r\n  const knownFragmentNames = Object.create(null);\r\n  return {\r\n    OperationDefinition: () => false,\r\n\r\n    FragmentDefinition(node) {\r\n      const fragmentName = node.name.value;\r\n\r\n      if (knownFragmentNames[fragmentName]) {\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `There can be only one fragment named \"${fragmentName}\".`,\r\n            [knownFragmentNames[fragmentName], node.name],\r\n          ),\r\n        );\r\n      } else {\r\n        knownFragmentNames[fragmentName] = node.name;\r\n      }\r\n\r\n      return false;\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}