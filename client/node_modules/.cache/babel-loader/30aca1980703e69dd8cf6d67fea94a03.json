{"ast":null,"code":"import { groupBy } from '../../jsutils/groupBy.mjs';\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\n/**\r\n * Unique argument names\r\n *\r\n * A GraphQL field or directive is only valid if all supplied arguments are\r\n * uniquely named.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Argument-Names\r\n */\n\nexport function UniqueArgumentNamesRule(context) {\n  return {\n    Field: checkArgUniqueness,\n    Directive: checkArgUniqueness\n  };\n\n  function checkArgUniqueness(parentNode) {\n    var _parentNode$arguments; // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n    /* c8 ignore next */\n\n\n    const argumentNodes = (_parentNode$arguments = parentNode.arguments) !== null && _parentNode$arguments !== void 0 ? _parentNode$arguments : [];\n    const seenArgs = groupBy(argumentNodes, arg => arg.name.value);\n\n    for (const [argName, argNodes] of seenArgs) {\n      if (argNodes.length > 1) {\n        context.reportError(new GraphQLError(`There can be only one argument named \"${argName}\".`, argNodes.map(node => node.name)));\n      }\n    }\n  }\n}","map":{"version":3,"sources":["C:/BootCamp/Book-Search-21/node_modules/graphql/validation/rules/UniqueArgumentNamesRule.mjs"],"names":["groupBy","GraphQLError","UniqueArgumentNamesRule","context","Field","checkArgUniqueness","Directive","parentNode","_parentNode$arguments","argumentNodes","arguments","seenArgs","arg","name","value","argName","argNodes","length","reportError","map","node"],"mappings":"AAAA,SAASA,OAAT,QAAwB,2BAAxB;AACA,SAASC,YAAT,QAA6B,8BAA7B;AAEA;;;;;;;;;AAQA,OAAO,SAASC,uBAAT,CAAiCC,OAAjC,EAA0C;AAC/C,SAAO;AACLC,IAAAA,KAAK,EAAEC,kBADF;AAELC,IAAAA,SAAS,EAAED;AAFN,GAAP;;AAKA,WAASA,kBAAT,CAA4BE,UAA5B,EAAwC;AACtC,QAAIC,qBAAJ,CADsC,CAGtC;;AAEA;;;AACA,UAAMC,aAAa,GACjB,CAACD,qBAAqB,GAAGD,UAAU,CAACG,SAApC,MAAmD,IAAnD,IACAF,qBAAqB,KAAK,KAAK,CAD/B,GAEIA,qBAFJ,GAGI,EAJN;AAKA,UAAMG,QAAQ,GAAGX,OAAO,CAACS,aAAD,EAAiBG,GAAD,IAASA,GAAG,CAACC,IAAJ,CAASC,KAAlC,CAAxB;;AAEA,SAAK,MAAM,CAACC,OAAD,EAAUC,QAAV,CAAX,IAAkCL,QAAlC,EAA4C;AAC1C,UAAIK,QAAQ,CAACC,MAAT,GAAkB,CAAtB,EAAyB;AACvBd,QAAAA,OAAO,CAACe,WAAR,CACE,IAAIjB,YAAJ,CACG,yCAAwCc,OAAQ,IADnD,EAEEC,QAAQ,CAACG,GAAT,CAAcC,IAAD,IAAUA,IAAI,CAACP,IAA5B,CAFF,CADF;AAMD;AACF;AACF;AACF","sourcesContent":["import { groupBy } from '../../jsutils/groupBy.mjs';\r\nimport { GraphQLError } from '../../error/GraphQLError.mjs';\r\n\r\n/**\r\n * Unique argument names\r\n *\r\n * A GraphQL field or directive is only valid if all supplied arguments are\r\n * uniquely named.\r\n *\r\n * See https://spec.graphql.org/draft/#sec-Argument-Names\r\n */\r\nexport function UniqueArgumentNamesRule(context) {\r\n  return {\r\n    Field: checkArgUniqueness,\r\n    Directive: checkArgUniqueness,\r\n  };\r\n\r\n  function checkArgUniqueness(parentNode) {\r\n    var _parentNode$arguments;\r\n\r\n    // FIXME: https://github.com/graphql/graphql-js/issues/2203\r\n\r\n    /* c8 ignore next */\r\n    const argumentNodes =\r\n      (_parentNode$arguments = parentNode.arguments) !== null &&\r\n      _parentNode$arguments !== void 0\r\n        ? _parentNode$arguments\r\n        : [];\r\n    const seenArgs = groupBy(argumentNodes, (arg) => arg.name.value);\r\n\r\n    for (const [argName, argNodes] of seenArgs) {\r\n      if (argNodes.length > 1) {\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `There can be only one argument named \"${argName}\".`,\r\n            argNodes.map((node) => node.name),\r\n          ),\r\n        );\r\n      }\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}