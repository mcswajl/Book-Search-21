{"ast":null,"code":"import { GraphQLError } from '../../../error/GraphQLError.mjs';\nimport { getNamedType } from '../../../type/definition.mjs';\nimport { isIntrospectionType } from '../../../type/introspection.mjs';\n/**\r\n * Prohibit introspection queries\r\n *\r\n * A GraphQL document is only valid if all fields selected are not fields that\r\n * return an introspection type.\r\n *\r\n * Note: This rule is optional and is not part of the Validation section of the\r\n * GraphQL Specification. This rule effectively disables introspection, which\r\n * does not reflect best practices and should only be done if absolutely necessary.\r\n */\n\nexport function NoSchemaIntrospectionCustomRule(context) {\n  return {\n    Field(node) {\n      const type = getNamedType(context.getType());\n\n      if (type && isIntrospectionType(type)) {\n        context.reportError(new GraphQLError(`GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`, node));\n      }\n    }\n\n  };\n}","map":{"version":3,"sources":["C:/BootCamp/Book-Search-21/node_modules/graphql/validation/rules/custom/NoSchemaIntrospectionCustomRule.mjs"],"names":["GraphQLError","getNamedType","isIntrospectionType","NoSchemaIntrospectionCustomRule","context","Field","node","type","getType","reportError","name","value"],"mappings":"AAAA,SAASA,YAAT,QAA6B,iCAA7B;AACA,SAASC,YAAT,QAA6B,8BAA7B;AACA,SAASC,mBAAT,QAAoC,iCAApC;AAEA;;;;;;;;;;;AAUA,OAAO,SAASC,+BAAT,CAAyCC,OAAzC,EAAkD;AACvD,SAAO;AACLC,IAAAA,KAAK,CAACC,IAAD,EAAO;AACV,YAAMC,IAAI,GAAGN,YAAY,CAACG,OAAO,CAACI,OAAR,EAAD,CAAzB;;AAEA,UAAID,IAAI,IAAIL,mBAAmB,CAACK,IAAD,CAA/B,EAAuC;AACrCH,QAAAA,OAAO,CAACK,WAAR,CACE,IAAIT,YAAJ,CACG,yFAAwFM,IAAI,CAACI,IAAL,CAAUC,KAAM,IAD3G,EAEEL,IAFF,CADF;AAMD;AACF;;AAZI,GAAP;AAcD","sourcesContent":["import { GraphQLError } from '../../../error/GraphQLError.mjs';\r\nimport { getNamedType } from '../../../type/definition.mjs';\r\nimport { isIntrospectionType } from '../../../type/introspection.mjs';\r\n\r\n/**\r\n * Prohibit introspection queries\r\n *\r\n * A GraphQL document is only valid if all fields selected are not fields that\r\n * return an introspection type.\r\n *\r\n * Note: This rule is optional and is not part of the Validation section of the\r\n * GraphQL Specification. This rule effectively disables introspection, which\r\n * does not reflect best practices and should only be done if absolutely necessary.\r\n */\r\nexport function NoSchemaIntrospectionCustomRule(context) {\r\n  return {\r\n    Field(node) {\r\n      const type = getNamedType(context.getType());\r\n\r\n      if (type && isIntrospectionType(type)) {\r\n        context.reportError(\r\n          new GraphQLError(\r\n            `GraphQL introspection has been disabled, but the requested query contained the field \"${node.name.value}\".`,\r\n            node,\r\n          ),\r\n        );\r\n      }\r\n    },\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}