{"ast":null,"code":"// route to get logged in user's info (needs the token)\nexport const getMe = token => {\n  return fetch('/api/users/me', {\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const createUser = userData => {\n  return fetch('/api/users', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n};\nexport const loginUser = userData => {\n  return fetch('/api/users/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userData)\n  });\n}; // save book data for a logged in user\n\nexport const saveBook = (bookData, token) => {\n  return fetch('/api/users', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json',\n      authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify(bookData)\n  });\n}; // remove saved book data for a logged in user\n\nexport const deleteBook = (bookId, token) => {\n  return fetch(`/api/users/books/${bookId}`, {\n    method: 'DELETE',\n    headers: {\n      authorization: `Bearer ${token}`\n    }\n  });\n}; // make a search to google books api\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\n\nexport const searchGoogleBooks = query => {\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n};","map":{"version":3,"sources":["C:/BootCamp/Book-Search-21/client/src/utils/API.js"],"names":["getMe","token","fetch","headers","authorization","createUser","userData","method","body","JSON","stringify","loginUser","saveBook","bookData","deleteBook","bookId","searchGoogleBooks","query"],"mappings":"AAAA;AACA,OAAO,MAAMA,KAAK,GAAIC,KAAD,IAAW;AAC9B,SAAOC,KAAK,CAAC,eAAD,EAAkB;AAC5BC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB;AADmB,GAAlB,CAAZ;AAMD,CAPM;AASP,OAAO,MAAMI,UAAU,GAAIC,QAAD,IAAc;AACtC,SAAOJ,KAAK,CAAC,YAAD,EAAe;AACzBK,IAAAA,MAAM,EAAE,MADiB;AAEzBJ,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFgB;AAKzBK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf;AALmB,GAAf,CAAZ;AAOD,CARM;AAUP,OAAO,MAAMK,SAAS,GAAIL,QAAD,IAAc;AACrC,SAAOJ,KAAK,CAAC,kBAAD,EAAqB;AAC/BK,IAAAA,MAAM,EAAE,MADuB;AAE/BJ,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsB;AAK/BK,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf;AALyB,GAArB,CAAZ;AAOD,CARM,C,CAUP;;AACA,OAAO,MAAMM,QAAQ,GAAG,CAACC,QAAD,EAAWZ,KAAX,KAAqB;AAC3C,SAAOC,KAAK,CAAC,YAAD,EAAe;AACzBK,IAAAA,MAAM,EAAE,KADiB;AAEzBJ,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AAFxB,KAFgB;AAMzBO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeG,QAAf;AANmB,GAAf,CAAZ;AAQD,CATM,C,CAWP;;AACA,OAAO,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASd,KAAT,KAAmB;AAC3C,SAAOC,KAAK,CAAE,oBAAmBa,MAAO,EAA5B,EAA+B;AACzCR,IAAAA,MAAM,EAAE,QADiC;AAEzCJ,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AAFgC,GAA/B,CAAZ;AAMD,CAPM,C,CASP;AACA;;AACA,OAAO,MAAMe,iBAAiB,GAAIC,KAAD,IAAW;AAC1C,SAAOf,KAAK,CAAE,iDAAgDe,KAAM,EAAxD,CAAZ;AACD,CAFM","sourcesContent":["// route to get logged in user's info (needs the token)\r\nexport const getMe = (token) => {\r\n  return fetch('/api/users/me', {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\nexport const createUser = (userData) => {\r\n  return fetch('/api/users', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\nexport const loginUser = (userData) => {\r\n  return fetch('/api/users/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify(userData),\r\n  });\r\n};\r\n\r\n// save book data for a logged in user\r\nexport const saveBook = (bookData, token) => {\r\n  return fetch('/api/users', {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify(bookData),\r\n  });\r\n};\r\n\r\n// remove saved book data for a logged in user\r\nexport const deleteBook = (bookId, token) => {\r\n  return fetch(`/api/users/books/${bookId}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      authorization: `Bearer ${token}`,\r\n    },\r\n  });\r\n};\r\n\r\n// make a search to google books api\r\n// https://www.googleapis.com/books/v1/volumes?q=harry+potter\r\nexport const searchGoogleBooks = (query) => {\r\n  return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}